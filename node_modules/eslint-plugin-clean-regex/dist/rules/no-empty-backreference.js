"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const rules_util_1 = require("../rules-util");
const ast_util_1 = require("../ast-util");
exports.default = {
    meta: {
        type: "problem",
        docs: {
            description: "Disallow backreferences that will always be replaced with the empty string.",
            url: rules_util_1.getDocUrl("no-empty-backreference"),
        },
    },
    create(context) {
        return rules_util_1.createRuleListener(({ visitAST, reportElement }) => {
            visitAST({
                onBackreferenceEnter(node) {
                    if (ast_util_1.isZeroLength(node.resolved)) {
                        context.report(Object.assign({ message: "The referenced capturing group can only match the empty string." }, reportElement(node)));
                        return;
                    }
                    if (ast_util_1.isEmptyBackreference(node)) {
                        context.report(Object.assign({ message: "The backreference is not reachable from the referenced capturing group without resetting the captured string." }, reportElement(node)));
                        return;
                    }
                },
            });
        });
    },
};
