"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const format_1 = require("../format");
const rules_util_1 = require("../rules-util");
const ast_util_1 = require("../ast-util");
exports.default = {
    meta: {
        type: "problem",
        docs: {
            description: "Warn about confusing quantifiers.",
            url: rules_util_1.getDocUrl("confusing-quantifier"),
        },
    },
    create(context) {
        return rules_util_1.createRuleListener(({ visitAST, reportQuantifier }) => {
            visitAST({
                onQuantifierEnter(node) {
                    if (node.min > 0 && ast_util_1.isPotentiallyEmpty(node.element)) {
                        const proposal = ast_util_1.quantToString(Object.assign(Object.assign({}, node), { min: 0 }));
                        context.report(Object.assign({ message: `This quantifier is confusing because its minimum is ${node.min} but it can match the empty string.` +
                                ` Maybe replace it with ${format_1.mention(proposal)} to reflect that it can match the empty string?` }, reportQuantifier(node)));
                        return;
                    }
                },
            });
        });
    },
};
