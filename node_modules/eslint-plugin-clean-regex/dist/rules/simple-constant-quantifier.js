"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const rules_util_1 = require("../rules-util");
const ast_util_1 = require("../ast-util");
exports.default = {
    meta: {
        type: "suggestion",
        docs: {
            description: "Prefer simple constant quantifiers over the range form.",
            url: rules_util_1.getDocUrl("simple-constant-quantifier"),
        },
        fixable: "code",
    },
    create(context) {
        return rules_util_1.createRuleListener(({ visitAST, replaceQuantifier }) => {
            visitAST({
                onQuantifierEnter(node) {
                    if (node.min !== node.max || node.min < 2) {
                        return;
                    }
                    const currentRaw = ast_util_1.getQuantifierRaw(node);
                    const simpleRaw = ast_util_1.quantToString(node);
                    if (simpleRaw !== currentRaw) {
                        context.report(Object.assign({ message: `This constant quantifier can be simplified to "${simpleRaw}".` }, replaceQuantifier(node, simpleRaw)));
                    }
                },
            });
        });
    },
};
