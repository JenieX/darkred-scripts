"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const rules_util_1 = require("../rules-util");
exports.default = {
    meta: {
        type: "problem",
        docs: {
            description: "Disallow alternatives without elements.",
            url: rules_util_1.getDocUrl("no-empty-alternative"),
        },
    },
    create(context) {
        return rules_util_1.createRuleListener(({ visitAST, reportElement }) => {
            function checkAlternatives(node) {
                if (node.alternatives.length >= 2) {
                    for (let i = 0; i < node.alternatives.length; i++) {
                        const alt = node.alternatives[i];
                        if (alt.elements.length === 0) {
                            context.report(Object.assign({ message: "No empty alternatives. Use quantifiers instead." }, reportElement(node)));
                            return;
                        }
                    }
                }
            }
            visitAST({
                onGroupEnter: checkAlternatives,
                onCapturingGroupEnter: checkAlternatives,
                onPatternEnter: checkAlternatives,
            });
        });
    },
};
