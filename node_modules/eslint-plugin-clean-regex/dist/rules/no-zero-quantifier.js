"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const rules_util_1 = require("../rules-util");
const ast_util_1 = require("../ast-util");
exports.default = {
    meta: {
        type: "problem",
        docs: {
            description: "Disallow quantifiers with a maximum of 0.",
            url: rules_util_1.getDocUrl("no-zero-quantifier"),
        },
        fixable: "code",
    },
    create(context) {
        return rules_util_1.createRuleListener(({ visitAST, removeElement, reportElement }) => {
            visitAST({
                onQuantifierEnter(node) {
                    if (node.max === 0) {
                        let props;
                        if (ast_util_1.hasSomeDescendant(node, n => n.type === "CapturingGroup")) {
                            props = reportElement(node);
                        }
                        else {
                            props = removeElement(node);
                        }
                        context.report(Object.assign({ message: "The quantifier and the quantified element can be removed." }, props));
                    }
                },
            });
        });
    },
};
