"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const rules_util_1 = require("../rules-util");
exports.default = {
    meta: {
        type: "suggestion",
        docs: {
            description: "Requires the regex flags to be sorted.",
            url: rules_util_1.getDocUrl("sort-flags"),
        },
        fixable: "code",
    },
    create(context) {
        const order = "gimsuy";
        const compareFn = (a, b) => {
            const aIndex = order.indexOf(a);
            const bIndex = order.indexOf(b);
            if (aIndex === -1) {
                throw new Error(`Unknown flag ${a}.`);
            }
            if (bIndex === -1) {
                throw new Error(`Unknown flag ${b}.`);
            }
            return aIndex - bIndex;
        };
        return rules_util_1.createRuleListener(({ flags, replaceFlags, reportFlags }) => {
            try {
                const sortedFlags = flags.raw.split("").sort(compareFn).join("");
                if (flags.raw !== sortedFlags) {
                    context.report(Object.assign({ message: `The flags ${flags.raw} should in the order ${sortedFlags}.` }, replaceFlags(sortedFlags)));
                }
            }
            catch (e) {
                context.report(Object.assign({ message: e.message }, reportFlags()));
            }
        });
    },
};
